### YamlMime:ManagedReference
items:
- uid: Interaction.MaterialController
  commentId: T:Interaction.MaterialController
  id: MaterialController
  parent: Interaction
  children:
  - Interaction.MaterialController.ActivateErrorIndicator
  - Interaction.MaterialController.ActivateOutlines
  - Interaction.MaterialController.ActivateSuccessIndicator
  - Interaction.MaterialController.ActivateSuccessIndicator(System.String)
  - Interaction.MaterialController.ChangeToCombineMaterial
  - Interaction.MaterialController.DeactivateOutlines
  - Interaction.MaterialController.resetOriginalMaterial
  - Interaction.MaterialController.setNewOriginalMaterial(GameObject,Material)
  langs:
  - csharp
  - vb
  name: MaterialController
  nameWithType: MaterialController
  fullName: Interaction.MaterialController
  type: Class
  source:
    id: MaterialController
    path: ''
    startLine: 1823
  assemblies:
  - cs.temp.dll
  namespace: Interaction
  summary: "\nHandles material related functionality for one TrainAR object.\n"
  example: []
  syntax:
    content: 'public class MaterialController : MonoBehaviour'
    content.vb: >-
      Public Class MaterialController
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Interaction.MaterialController.ActivateOutlines
  commentId: M:Interaction.MaterialController.ActivateOutlines
  id: ActivateOutlines
  parent: Interaction.MaterialController
  langs:
  - csharp
  - vb
  name: ActivateOutlines()
  nameWithType: MaterialController.ActivateOutlines()
  fullName: Interaction.MaterialController.ActivateOutlines()
  type: Method
  source:
    id: ActivateOutlines
    path: ''
    startLine: 1876
  assemblies:
  - cs.temp.dll
  namespace: Interaction
  summary: "\nActivate the Outline of the object\n"
  example: []
  syntax:
    content: public void ActivateOutlines()
    content.vb: Public Sub ActivateOutlines
  overload: Interaction.MaterialController.ActivateOutlines*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Interaction.MaterialController.DeactivateOutlines
  commentId: M:Interaction.MaterialController.DeactivateOutlines
  id: DeactivateOutlines
  parent: Interaction.MaterialController
  langs:
  - csharp
  - vb
  name: DeactivateOutlines()
  nameWithType: MaterialController.DeactivateOutlines()
  fullName: Interaction.MaterialController.DeactivateOutlines()
  type: Method
  source:
    id: DeactivateOutlines
    path: ''
    startLine: 1884
  assemblies:
  - cs.temp.dll
  namespace: Interaction
  summary: "\nDeactivate the Outline of the object\n"
  example: []
  syntax:
    content: public void DeactivateOutlines()
    content.vb: Public Sub DeactivateOutlines
  overload: Interaction.MaterialController.DeactivateOutlines*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Interaction.MaterialController.ChangeToCombineMaterial
  commentId: M:Interaction.MaterialController.ChangeToCombineMaterial
  id: ChangeToCombineMaterial
  parent: Interaction.MaterialController
  langs:
  - csharp
  - vb
  name: ChangeToCombineMaterial()
  nameWithType: MaterialController.ChangeToCombineMaterial()
  fullName: Interaction.MaterialController.ChangeToCombineMaterial()
  type: Method
  source:
    id: ChangeToCombineMaterial
    path: ''
    startLine: 1940
  assemblies:
  - cs.temp.dll
  namespace: Interaction
  summary: "\nReplaces all materials on the this Object with a material for combining.\n"
  example: []
  syntax:
    content: public void ChangeToCombineMaterial()
    content.vb: Public Sub ChangeToCombineMaterial
  overload: Interaction.MaterialController.ChangeToCombineMaterial*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Interaction.MaterialController.resetOriginalMaterial
  commentId: M:Interaction.MaterialController.resetOriginalMaterial
  id: resetOriginalMaterial
  parent: Interaction.MaterialController
  langs:
  - csharp
  - vb
  name: resetOriginalMaterial()
  nameWithType: MaterialController.resetOriginalMaterial()
  fullName: Interaction.MaterialController.resetOriginalMaterial()
  type: Method
  source:
    id: resetOriginalMaterial
    path: ''
    startLine: 1969
  assemblies:
  - cs.temp.dll
  namespace: Interaction
  summary: "\nResets the current materials back to original materials of the object\n"
  example: []
  syntax:
    content: public void resetOriginalMaterial()
    content.vb: Public Sub resetOriginalMaterial
  overload: Interaction.MaterialController.resetOriginalMaterial*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Interaction.MaterialController.setNewOriginalMaterial(GameObject,Material)
  commentId: M:Interaction.MaterialController.setNewOriginalMaterial(GameObject,Material)
  id: setNewOriginalMaterial(GameObject,Material)
  parent: Interaction.MaterialController
  langs:
  - csharp
  - vb
  name: setNewOriginalMaterial(GameObject, Material)
  nameWithType: MaterialController.setNewOriginalMaterial(GameObject, Material)
  fullName: Interaction.MaterialController.setNewOriginalMaterial(GameObject, Material)
  type: Method
  source:
    id: setNewOriginalMaterial
    path: ''
    startLine: 1982
  assemblies:
  - cs.temp.dll
  namespace: Interaction
  summary: "\nChange the original material of the given object with to a new material.\n"
  example: []
  syntax:
    content: public void setNewOriginalMaterial(GameObject gameObject, Material newMaterial)
    parameters:
    - id: gameObject
      type: Global.GameObject
      description: The gameobject where the material is changed.
    - id: newMaterial
      type: Global.Material
      description: The new material.
    content.vb: Public Sub setNewOriginalMaterial(gameObject As GameObject, newMaterial As Material)
  overload: Interaction.MaterialController.setNewOriginalMaterial*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Interaction.MaterialController.ActivateErrorIndicator
  commentId: M:Interaction.MaterialController.ActivateErrorIndicator
  id: ActivateErrorIndicator
  parent: Interaction.MaterialController
  langs:
  - csharp
  - vb
  name: ActivateErrorIndicator()
  nameWithType: MaterialController.ActivateErrorIndicator()
  fullName: Interaction.MaterialController.ActivateErrorIndicator()
  type: Method
  source:
    id: ActivateErrorIndicator
    path: ''
    startLine: 2024
  assemblies:
  - cs.temp.dll
  namespace: Interaction
  summary: "\nPlay Error outline animation in coroutine\n"
  example: []
  syntax:
    content: public void ActivateErrorIndicator()
    content.vb: Public Sub ActivateErrorIndicator
  overload: Interaction.MaterialController.ActivateErrorIndicator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Interaction.MaterialController.ActivateSuccessIndicator
  commentId: M:Interaction.MaterialController.ActivateSuccessIndicator
  id: ActivateSuccessIndicator
  parent: Interaction.MaterialController
  langs:
  - csharp
  - vb
  name: ActivateSuccessIndicator()
  nameWithType: MaterialController.ActivateSuccessIndicator()
  fullName: Interaction.MaterialController.ActivateSuccessIndicator()
  type: Method
  source:
    id: ActivateSuccessIndicator
    path: ''
    startLine: 2089
  assemblies:
  - cs.temp.dll
  namespace: Interaction
  summary: "\nPlay Success outline animation in coroutine\n"
  example: []
  syntax:
    content: public void ActivateSuccessIndicator()
    content.vb: Public Sub ActivateSuccessIndicator
  overload: Interaction.MaterialController.ActivateSuccessIndicator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Interaction.MaterialController.ActivateSuccessIndicator(System.String)
  commentId: M:Interaction.MaterialController.ActivateSuccessIndicator(System.String)
  id: ActivateSuccessIndicator(System.String)
  parent: Interaction.MaterialController
  langs:
  - csharp
  - vb
  name: ActivateSuccessIndicator(String)
  nameWithType: MaterialController.ActivateSuccessIndicator(String)
  fullName: Interaction.MaterialController.ActivateSuccessIndicator(System.String)
  type: Method
  source:
    id: ActivateSuccessIndicator
    path: ''
    startLine: 2099
  assemblies:
  - cs.temp.dll
  namespace: Interaction
  summary: "\nPlay Success outline animation in coroutine\n"
  example: []
  syntax:
    content: public void ActivateSuccessIndicator(string CombinedWith)
    parameters:
    - id: CombinedWith
      type: System.String
    content.vb: Public Sub ActivateSuccessIndicator(CombinedWith As String)
  overload: Interaction.MaterialController.ActivateSuccessIndicator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Interaction
  commentId: N:Interaction
  name: Interaction
  nameWithType: Interaction
  fullName: Interaction
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Interaction.MaterialController.ActivateOutlines*
  commentId: Overload:Interaction.MaterialController.ActivateOutlines
  name: ActivateOutlines
  nameWithType: MaterialController.ActivateOutlines
  fullName: Interaction.MaterialController.ActivateOutlines
- uid: Interaction.MaterialController.DeactivateOutlines*
  commentId: Overload:Interaction.MaterialController.DeactivateOutlines
  name: DeactivateOutlines
  nameWithType: MaterialController.DeactivateOutlines
  fullName: Interaction.MaterialController.DeactivateOutlines
- uid: Interaction.MaterialController.ChangeToCombineMaterial*
  commentId: Overload:Interaction.MaterialController.ChangeToCombineMaterial
  name: ChangeToCombineMaterial
  nameWithType: MaterialController.ChangeToCombineMaterial
  fullName: Interaction.MaterialController.ChangeToCombineMaterial
- uid: Interaction.MaterialController.resetOriginalMaterial*
  commentId: Overload:Interaction.MaterialController.resetOriginalMaterial
  name: resetOriginalMaterial
  nameWithType: MaterialController.resetOriginalMaterial
  fullName: Interaction.MaterialController.resetOriginalMaterial
- uid: Interaction.MaterialController.setNewOriginalMaterial*
  commentId: Overload:Interaction.MaterialController.setNewOriginalMaterial
  name: setNewOriginalMaterial
  nameWithType: MaterialController.setNewOriginalMaterial
  fullName: Interaction.MaterialController.setNewOriginalMaterial
- uid: Global.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: Global.Material
  commentId: '!:Global.Material'
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: Material
- uid: Interaction.MaterialController.ActivateErrorIndicator*
  commentId: Overload:Interaction.MaterialController.ActivateErrorIndicator
  name: ActivateErrorIndicator
  nameWithType: MaterialController.ActivateErrorIndicator
  fullName: Interaction.MaterialController.ActivateErrorIndicator
- uid: Interaction.MaterialController.ActivateSuccessIndicator*
  commentId: Overload:Interaction.MaterialController.ActivateSuccessIndicator
  name: ActivateSuccessIndicator
  nameWithType: MaterialController.ActivateSuccessIndicator
  fullName: Interaction.MaterialController.ActivateSuccessIndicator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
